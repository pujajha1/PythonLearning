Unpacking:

>>> p = (4, 5)
>>> x, y = p
>>> x
4
>>> y
5
>>>
>>> data = [ 'ACME', 50, 91.1, (2012, 12, 21) ]
>>> name, shares, price, date = data
'ACME'
>>> date
(2012, 12, 21)

Note:Unpacking doesn't work with strings and tuples

>>> s = 'Hello'
>>> a, b, c, d, e = s
>>> a
'H'
>>> b
'e'
>>> e
'o'

Q: fin smallest and largest from a list
>>> import heapq
>>> nums = [1, 8, 2, 23, 7, -4, 18, 23, 42, 37, 2]
>>> heapq.nlargest(1,nums)
[42]
>>> heapq.nsmallest(1,nums)
[-4]

Another way:
>>> nums = [1, 8, 2, 23, 7, -4, 18, 23, 42, 37, 2]
>>> import heapq
>>> heap = list(nums)
>>> heapq.heapify(heap)
>>> heap
[-4, 2, 1, 23, 7, 2, 18, 23, 42, 37, 8]

Q:to get first 3 smallest item
>>> heapq.heappop(heap)
-4
>>> heapq.heappop(heap)
1
>>> heapq.heappop(heap)
2

If you are simply trying to find the single smallest
or largest item (N=1), it is faster to use min() and max(). 


NEXT WAY:
>>> sorted(nums[:10])
[-4, 1, 2, 7, 8, 18, 23, 23, 37, 42]
